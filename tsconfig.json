{
  "compilerOptions": {
    "target": "ES2020", // 用来指定ts被编译为的es版本
    "useDefineForClassFields": true, // 使用 Object.defineProperty 定义 class 中的属性，而非使用 obj.key = value 的形式定义属性
    "module": "ESNext", // 指定要使用的模块化的规范
    "lib": ["ES2020", "DOM", "DOM.Iterable"], // 引入 ES 最新特性和 DOM 接口的类型定义
    "skipLibCheck": true, // 跳过对 .d.ts 文件的类型检查

    /* Bundler mode */
    "moduleResolution": "bundler", // 模拟打包工具的模块查找规则
    "allowImportingTsExtensions": true, // 允许 TypeScript 文件使用特定于 TypeScript 的扩展名（如 .ts、.mts 或 .tsx）相互导入
    "resolveJsonModule": true, // 允许引入 JSON 文件
    "isolatedModules": true, // 指定是否将每个文件作为单独的模块
    "noEmit": true, // 不生成编译文件
    "jsx": "preserve", // 保留jsx代码不做转换

    /* Linting */
    "strict": true, // 启用所用严格的类型检查
    "noUnusedLocals": true, // 用于检查是否有定义了但是没有使用变量
    "noUnusedParameters": true, // 用于检测是否在函数中没有使用的参数
    "noFallthroughCasesInSwitch": true, // 用于检查switch中是否有case没有使用break跳出switch

    /* Alias */
    "baseUrl": ".",
    "paths": {
      "@/*": ["src/*"],
      "@page1/*": ["src/pages/page1/*"],
      "@page2/*": ["src/pages/page2/*"]
    }
  },
  "include": ["src/**/*.ts", "src/**/*.d.ts", "src/**/*.tsx", "src/**/*.vue"],

  /* 项目引用, 为项目的不同部分使用不同的 TypeScript 配置*/
  "references": [{ "path": "./tsconfig.vite.json" }]
}
